/* Universal Selector */
/* the asterisk is the universal selector */
/*{
    border:1px solid blue;
} */
*{
    margin: 0;
    padding: 0;
}


.navbar{
    display: flex;
    justify-content: space-around;
    background-color: dodgerblue;
    padding: 2vw;
}

.navbar > a {
    color: white;
    text-decoration: none;
}


/* 
Box Model is made up of 4 parts: Content, Padding, Border, Margin
    Content - The content of the box, where text and images appear
    Padding - Clears an area around the content. The padding is transparent
    Border - A border that goes around the padding and content
    Margin - Clears an area outside the border. The margin is transparent
*/
.box-model {
    border: 5px solid orange;
    padding: 25px;
    margin: 20px;
}

/*
Total Size:
Height: 120px (Content) + 2825px (Padding) + 2*5px (Border) + 2*20px (Margin) = 200px
Width: 300 px (Content) + 2*25px (Padding) + 2*5 (Border) + 2*20px (Margin) = 400px
*/





/* Simple Selector */
/* element: grabs all of the elements based on the element name e.g h1,h2,p,div{} */
h3 {
    text-transform: uppercase;
}

section {
    width: 90vw;
    margin: auto;
}

/* class: grabs all of the elements with the class name. begins with a dot (.) e.g. .className */
.selectors {
    border: 3px solid red;
    margin: 10px 0;
}

/* id: grabs the element with the id. begins with an octothorpe (#) e.g. #idName */
#simple {text-align: center;

}


/* Combinator Selector - based on the relationship */
/* Descendant Selector - Used to match all elements that are direct descendants of a specified element */

#combo h6 {
    background-color: aqua;
}

/* Child Selector (>) - Used to match all elements that are direct children of a specified element. Descendant and child selectors are often used interchangably because they are very similar. The difference here though is specificity */
#combo > h6{
    text-align: right;
}

/* Adjacent Sibling Selector (+) - Used to select an element that is directly after another specific element. HAS to be immediately following! */
aside + h4 {
    background-color: green;
}

/* General Sibling Selector (~) - Used to select an element that is directly after another specific element. HAS to be immediately following! */
aside ~ h3{
    background-color: orange;
}




/* Pseudo-class Selector - Select elements based on a certain state */
/* selector:pseudo-class{} */

/* unvisited link */
.selectors a:link{
    color: red;
}
/* visited link */
.selectors a:visited link{
    color:green;
}
/* mouse over link */
.selectors a: hover{
    color: white;
    background-color: balck;
}
/* selected link */
.selectors a:active{
    color:blue;
    background-color: red;
}

.child-example p{
    background-color: blueviolet;
}
.child-example p:nth-child(1){
    background-color: aquamarine;
}

/* Pseudo Elements - used to style specified parts of an element */
/* selector::psuedo-element{} */
#first-line::first-line {
    color: red;
    font-variant: small-caps;
}

#first-line::first-letter{
    color:blue;
    font-size: 4em;
}

#after-example::after{ 
    content: url('https://picsum.photos/100') 
}

/* Attribute Selectors - style HTML elements that have specific attributes or attribute values */
/* selector[attribute]{} */

.attributes > div{
    border: 2px solid black;
}
/* CSS [attribute] Selector */
/* matches any element that has that attribute */
div[title]{
    background-color: crimson;
}

/* CSS [attribute="value"] Selector */
/* matches the value exactly */
div[title="border"]{
    text-align: center;
}

/* CSS [attribute~="value"] Selector */
/* matches the value containing a specified word */
div[title~="border"]{
    font-variant: small-caps;
}

/* CSS [attribute|="value"] Selector */
/* matches a value or a value followed by a hyphen */
div[title|="border"]{
    color:white;
}

/* CSS [attribute^="value"] Selector */
/* matches if the value starts with the specified value */
div[title^="border"]{
    background-color: blue;
}

/* CSS [attribute$="value"] Selector */
/* matches if the value ends with the specified value */
div[title$="border"]{
    background-color: darkmagenta;
}

/* CSS [attribute*="value"] Selector */
/* matches contains the specified value */
div[title*="s"]{
    text-align: center;
}


/* CSS DISPLAYS */
.block-level{
    border: 5px solid black;
}

.block-level > h3{
    border: 3px solid mediumslateblue;
    display: inline; /*override the default of display: block */
}

#displays a {
    border: 3px solid goldenrod;
}
/* 
    Display: None
    Used to hide an element. Commonly used with JavaScript 
*/
#middle {
    border: 3px solid darkorchid;
    /* display: none; */
}


/* CSS POSITIONS */

/* position: relative - positioned relative to its normal position. Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be adjusted away from its normal position */

/* position: fixed - positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled */


/* position: fixed -  positioned relative to the nearest positioned ancestor */


/* position: sticky -  positioned based on the user's scroll position - toggles between relative and fixed, depending on the scroll position */

